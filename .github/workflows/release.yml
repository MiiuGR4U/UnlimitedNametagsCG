# .github/workflows/release.yml
name: Create Release

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Passo modificado para ser mais inteligente
      - name: Define Tag e Busca Changelog
        id: get_info
        run: |
          # Verifica se o workflow foi acionado por uma tag.
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            # Se sim, usa o nome da tag que acionou o workflow.
            TAG_NAME="${{ github.ref_name }}"
            echo "Workflow acionado pela tag: $TAG_NAME"
          else
            # Se não (foi manual), busca a última tag do repositório original.
            echo "Workflow acionado manualmente. Buscando última tag do projeto original..."
            TAG_NAME=$(gh api repos/alexdev03/UnlimitedNametags/releases/latest --jq '.tag_name')
            echo "Última tag encontrada: $TAG_NAME"
          fi

          # Salva a tag definida para ser usada nos próximos passos.
          echo "tag_name=$TAG_NAME" >> "$GITHUB_OUTPUT"

          # Com a tag correta em mãos, busca o changelog.
          echo "Buscando changelog para a tag: $TAG_NAME"
          CHANGELOG_BODY=$(gh api repos/alexdev03/UnlimitedNametags/releases/tags/$TAG_NAME --jq '.body' 2>/dev/null) || true

          # Se o changelog não for encontrado, usa uma mensagem padrão.
          if [[ -z "$CHANGELOG_BODY" ]]; then
            CHANGELOG_BODY="Nenhum changelog oficial encontrado para esta tag. Verifique o histórico de commits para detalhes."
          fi
          
          # Salva o changelog para o próximo passo.
          cat <<EOF >> "$GITHUB_OUTPUT"
          changelog<<HEREDOC
          $CHANGELOG_BODY
          HEREDOC
          EOF
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          # Usa a tag que foi definida dinamicamente no primeiro passo.
          tag_name: ${{ steps.get_info.outputs.tag_name }}
          # Usa o changelog que foi encontrado.
          body: ${{ steps.get_info.outputs.changelog }}
          # Anexa o .jar gerado.
          files: target/*.jar
